//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace Norriq.DataVerse.EventsManager.XrmContext.Models {
    
    
    /// <summary>
    /// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [EntityLogicalName("systemuser")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuser";
        
        public const int EntityTypeCode = 8;
        
        public SystemUser() : 
                base(EntityLogicalName) {
        }
        
        public SystemUser(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user.</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user.</para>
        /// <para>Display Name: Access Mode</para>
        /// </summary>
        [AttributeLogicalName("accessmode")]
        [DisplayName("Access Mode")]
        public SystemUser_AccessMode? AccessMode {
            get {
                return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
            }
            set {
                SetOptionSetValue("accessmode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(128)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 1.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(128)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(128)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(64)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(1024)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(1024)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(1024)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(40)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(128)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(64)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Other City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Other City")]
        [MaxLength(128)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Other Address</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Other Address")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 2.</para>
        /// <para>Display Name: Other Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Other Country/Region")]
        [MaxLength(128)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(128)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Other Street 1")]
        [MaxLength(1024)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Other Street 2")]
        [MaxLength(1024)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Other Street 3")]
        [MaxLength(1024)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(40)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Other ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Other ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Other State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Other State/Province")]
        [MaxLength(128)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>The identifier for the application. This is used to access data in another application.</para>
        /// <para>Display Name: Application ID</para>
        /// </summary>
        [AttributeLogicalName("applicationid")]
        [DisplayName("Application ID")]
        public Guid? ApplicationId {
            get {
                return GetAttributeValue<Guid?>("applicationid");
            }
            set {
                SetAttributeValue("applicationid", value);
            }
        }
        
        /// <summary>
        /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
        /// <para>Display Name: Application ID URI</para>
        /// </summary>
        [AttributeLogicalName("applicationiduri")]
        [DisplayName("Application ID URI")]
        [MaxLength(1024)]
        public string ApplicationIdUri {
            get {
                return GetAttributeValue<string>("applicationiduri");
            }
        }
        
        /// <summary>
        /// <para>This is the application directory object Id.</para>
        /// <para>Display Name: Azure AD Object ID</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object ID")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was set as soft deleted in Azure.</para>
        /// <para>Display Name: Azure Deleted On</para>
        /// </summary>
        [AttributeLogicalName("azuredeletedon")]
        [DisplayName("Azure Deleted On")]
        public DateTime? AzureDeletedOn {
            get {
                return GetAttributeValue<DateTime?>("azuredeletedon");
            }
        }
        
        /// <summary>
        /// <para>Azure state of user</para>
        /// <para>Display Name: Azure State</para>
        /// </summary>
        [AttributeLogicalName("azurestate")]
        [DisplayName("Azure State")]
        public SystemUser_AzureState? AzureState {
            get {
                return GetOptionSetValue<SystemUser_AzureState>("azurestate");
            }
            set {
                SetOptionSetValue("azurestate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>License type of user. This is used only in the on-premises version of the product. Online licenses are managed through Microsoft 365 Office Portal</para>
        /// <para>Display Name: License Type</para>
        /// </summary>
        [AttributeLogicalName("caltype")]
        [DisplayName("License Type")]
        public SystemUser_CALType? CALType {
            get {
                return GetOptionSetValue<SystemUser_CALType>("caltype");
            }
            set {
                SetOptionSetValue("caltype", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the user.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the systemuser.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates if default outlook filters have been populated.</para>
        /// <para>Display Name: Default Filters Populated</para>
        /// </summary>
        [AttributeLogicalName("defaultfilterspopulated")]
        [DisplayName("Default Filters Populated")]
        public bool? DefaultFiltersPopulated {
            get {
                return GetAttributeValue<bool?>("defaultfilterspopulated");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this user.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        [DisplayName("Mailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
        /// <para>Display Name: Default OneDrive for Business Folder Name</para>
        /// </summary>
        [AttributeLogicalName("defaultodbfoldername")]
        [DisplayName("Default OneDrive for Business Folder Name")]
        [MaxLength(200)]
        public string DefaultOdbFolderName {
            get {
                return GetAttributeValue<string>("defaultodbfoldername");
            }
        }
        
        /// <summary>
        /// <para>User delete state</para>
        /// <para>Display Name: Deleted State</para>
        /// </summary>
        [AttributeLogicalName("deletedstate")]
        [DisplayName("Deleted State")]
        public SystemUser_DeletedState? DeletedState {
            get {
                return GetOptionSetValue<SystemUser_DeletedState>("deletedstate");
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the user.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Whether to display the user in service views.</para>
        /// <para>Display Name: Display in Service Views</para>
        /// </summary>
        [AttributeLogicalName("displayinserviceviews")]
        [DisplayName("Display in Service Views")]
        public bool? DisplayInServiceViews {
            get {
                return GetAttributeValue<bool?>("displayinserviceviews");
            }
            set {
                SetAttributeValue("displayinserviceviews", value);
            }
        }
        
        /// <summary>
        /// <para>Active Directory domain of which the user is a member.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("domainname")]
        [DisplayName("User Name")]
        [MaxLength(1024)]
        public string DomainName {
            get {
                return GetAttributeValue<string>("domainname");
            }
            set {
                SetAttributeValue("domainname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Primary Email Status")]
        public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Employee identifier for the user.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(100)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>First name of the user.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(256)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Government identifier for the user.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(100)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Home phone number for the user.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("homephone")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string HomePhone {
            get {
                return GetAttributeValue<string>("homephone");
            }
            set {
                SetAttributeValue("homephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique user identity id</para>
        /// </summary>
        [AttributeLogicalName("identityid")]
        [DisplayName("Unique user identity id")]
        [Range(-2147483648, 2147483647)]
        public int? IdentityId {
            get {
                return GetAttributeValue<int?>("identityid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the user.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email Delivery Method")]
        public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Internal email address for the user.</para>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("internalemailaddress")]
        [DisplayName("Primary Email")]
        [MaxLength(100)]
        public string InternalEMailAddress {
            get {
                return GetAttributeValue<string>("internalemailaddress");
            }
            set {
                SetAttributeValue("internalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User invitation status.</para>
        /// <para>Display Name: Invitation Status</para>
        /// </summary>
        [AttributeLogicalName("invitestatuscode")]
        [DisplayName("Invitation Status")]
        public SystemUser_InviteStatusCode? InviteStatusCode {
            get {
                return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
            }
            set {
                SetOptionSetValue("invitestatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is enabled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Status")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Check if user is an integration user.</para>
        /// <para>Display Name: Integration user mode</para>
        /// </summary>
        [AttributeLogicalName("isintegrationuser")]
        [DisplayName("Integration user mode")]
        public bool? IsIntegrationUser {
            get {
                return GetAttributeValue<bool?>("isintegrationuser");
            }
            set {
                SetAttributeValue("isintegrationuser", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is licensed.</para>
        /// <para>Display Name: User Licensed</para>
        /// </summary>
        [AttributeLogicalName("islicensed")]
        [DisplayName("User Licensed")]
        public bool? IsLicensed {
            get {
                return GetAttributeValue<bool?>("islicensed");
            }
            set {
                SetAttributeValue("islicensed", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is synced with the directory.</para>
        /// <para>Display Name: User Synced</para>
        /// </summary>
        [AttributeLogicalName("issyncwithdirectory")]
        [DisplayName("User Synced")]
        public bool? IsSyncWithDirectory {
            get {
                return GetAttributeValue<bool?>("issyncwithdirectory");
            }
            set {
                SetAttributeValue("issyncwithdirectory", value);
            }
        }
        
        /// <summary>
        /// <para>Job title of the user.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Last name of the user.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(256)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Middle name of the user.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile alert email address for the user.</para>
        /// <para>Display Name: Mobile Alert Email</para>
        /// </summary>
        [AttributeLogicalName("mobilealertemail")]
        [DisplayName("Mobile Alert Email")]
        [MaxLength(100)]
        public string MobileAlertEMail {
            get {
                return GetAttributeValue<string>("mobilealertemail");
            }
            set {
                SetAttributeValue("mobilealertemail", value);
            }
        }
        
        /// <summary>
        /// <para>Items contained with a particular SystemUser.</para>
        /// <para>Display Name: Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineprofileid")]
        [DisplayName("Mobile Offline Profile")]
        public EntityReference MobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("mobileofflineprofileid");
            }
            set {
                SetAttributeValue("mobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile phone number for the user.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(64)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Nickname of the user.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(50)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the user.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the user.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email Delivery Method")]
        public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the manager of the user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("parentsystemuserid")]
        [DisplayName("Manager")]
        public EntityReference ParentSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("parentsystemuserid");
            }
            set {
                SetAttributeValue("parentsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Hi</para>
        /// </summary>
        [AttributeLogicalName("passporthi")]
        [DisplayName("Passport Hi")]
        [Range(0, 1000000000)]
        public int? PassportHi {
            get {
                return GetAttributeValue<int?>("passporthi");
            }
            set {
                SetAttributeValue("passporthi", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Lo</para>
        /// </summary>
        [AttributeLogicalName("passportlo")]
        [DisplayName("Passport Lo")]
        [Range(0, 1000000000)]
        public int? PassportLo {
            get {
                return GetAttributeValue<int?>("passportlo");
            }
            set {
                SetAttributeValue("passportlo", value);
            }
        }
        
        /// <summary>
        /// <para>Personal email address of the user.</para>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("personalemailaddress")]
        [DisplayName("Email 2")]
        [MaxLength(100)]
        public string PersonalEMailAddress {
            get {
                return GetAttributeValue<string>("personalemailaddress");
            }
            set {
                SetAttributeValue("personalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website on which a photo of the user is located.</para>
        /// <para>Display Name: Photo URL</para>
        /// </summary>
        [AttributeLogicalName("photourl")]
        [DisplayName("Photo URL")]
        [MaxLength(200)]
        public string PhotoUrl {
            get {
                return GetAttributeValue<string>("photourl");
            }
            set {
                SetAttributeValue("photourl", value);
            }
        }
        
        /// <summary>
        /// <para>User's position in hierarchical security model.</para>
        /// <para>Display Name: Position</para>
        /// </summary>
        [AttributeLogicalName("positionid")]
        [DisplayName("Position")]
        public EntityReference PositionId {
            get {
                return GetAttributeValue<EntityReference>("positionid");
            }
            set {
                SetAttributeValue("positionid", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred address for the user.</para>
        /// <para>Display Name: Preferred Address</para>
        /// </summary>
        [AttributeLogicalName("preferredaddresscode")]
        [DisplayName("Preferred Address")]
        public SystemUser_PreferredAddressCode? PreferredAddressCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
            }
            set {
                SetOptionSetValue("preferredaddresscode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred email address for the user.</para>
        /// <para>Display Name: Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("preferredemailcode")]
        [DisplayName("Preferred Email")]
        public SystemUser_PreferredEmailCode? PreferredEmailCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
            }
            set {
                SetOptionSetValue("preferredemailcode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred phone number for the user.</para>
        /// <para>Display Name: Preferred Phone</para>
        /// </summary>
        [AttributeLogicalName("preferredphonecode")]
        [DisplayName("Preferred Phone")]
        public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
            }
            set {
                SetOptionSetValue("preferredphonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the user.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Salutation for correspondence with the user.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(20)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Check if user is a setup user.</para>
        /// <para>Display Name: Restricted Access Mode</para>
        /// </summary>
        [AttributeLogicalName("setupuser")]
        [DisplayName("Restricted Access Mode")]
        public bool? SetupUser {
            get {
                return GetAttributeValue<bool?>("setupuser");
            }
            set {
                SetAttributeValue("setupuser", value);
            }
        }
        
        /// <summary>
        /// <para>SharePoint Work Email Address</para>
        /// <para>Display Name: SharePoint Email Address</para>
        /// </summary>
        [AttributeLogicalName("sharepointemailaddress")]
        [DisplayName("SharePoint Email Address")]
        [MaxLength(1024)]
        public string SharePointEmailAddress {
            get {
                return GetAttributeValue<string>("sharepointemailaddress");
            }
            set {
                SetAttributeValue("sharepointemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Skill set of the user.</para>
        /// <para>Display Name: Skills</para>
        /// </summary>
        [AttributeLogicalName("skills")]
        [DisplayName("Skills")]
        [MaxLength(100)]
        public string Skills {
            get {
                return GetAttributeValue<string>("skills");
            }
            set {
                SetAttributeValue("skills", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the territory to which the user is assigned.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the user.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(128)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the systemuser.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of user license.</para>
        /// <para>Display Name: User License Type</para>
        /// </summary>
        [AttributeLogicalName("userlicensetype")]
        [DisplayName("User License Type")]
        [Range(-2147483648, 2147483647)]
        public int? UserLicenseType {
            get {
                return GetAttributeValue<int?>("userlicensetype");
            }
            set {
                SetAttributeValue("userlicensetype", value);
            }
        }
        
        /// <summary>
        /// <para> User PUID User Identifiable Information</para>
        /// <para>Display Name: User PUID</para>
        /// </summary>
        [AttributeLogicalName("userpuid")]
        [DisplayName("User PUID")]
        [MaxLength(100)]
        public string UserPuid {
            get {
                return GetAttributeValue<string>("userpuid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the user.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Windows Live ID</para>
        /// <para>Display Name: Windows Live ID</para>
        /// </summary>
        [AttributeLogicalName("windowsliveid")]
        [DisplayName("Windows Live ID")]
        [MaxLength(1024)]
        public string WindowsLiveID {
            get {
                return GetAttributeValue<string>("windowsliveid");
            }
            set {
                SetAttributeValue("windowsliveid", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer login email address</para>
        /// <para>Display Name: Yammer Email</para>
        /// </summary>
        [AttributeLogicalName("yammeremailaddress")]
        [DisplayName("Yammer Email")]
        [MaxLength(200)]
        public string YammerEmailAddress {
            get {
                return GetAttributeValue<string>("yammeremailaddress");
            }
            set {
                SetAttributeValue("yammeremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer ID</para>
        /// <para>Display Name: Yammer User ID</para>
        /// </summary>
        [AttributeLogicalName("yammeruserid")]
        [DisplayName("Yammer User ID")]
        [MaxLength(128)]
        public string YammerUserId {
            get {
                return GetAttributeValue<string>("yammeruserid");
            }
            set {
                SetAttributeValue("yammeruserid", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(64)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(200)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(64)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(50)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Average Speaker Score</para>
        /// </summary>
        [AttributeLogicalName("nrq_averagespeakerscore")]
        [DisplayName("Average Speaker Score")]
        public decimal? nrq_AverageSpeakerScore {
            get {
                return GetAttributeValue<decimal?>("nrq_averagespeakerscore");
            }
        }
        
        /// <summary>
        /// <para>nrq_AverageSpeakerScore (CountAverageDescription)</para>
        /// <para>Display Name: nrq_AverageSpeakerScore (CountAverage)</para>
        /// </summary>
        [AttributeLogicalName("nrq_averagespeakerscore_count")]
        [DisplayName("nrq_AverageSpeakerScore (CountAverage)")]
        [Range(-2147483648, 2147483647)]
        public int? nrq_AverageSpeakerScore_Count {
            get {
                return GetAttributeValue<int?>("nrq_averagespeakerscore_count");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Average Speaker Score.</para>
        /// <para>Display Name: Average Speaker Score (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("nrq_averagespeakerscore_date")]
        [DisplayName("Average Speaker Score (Last Updated On)")]
        public DateTime? nrq_AverageSpeakerScore_Date {
            get {
                return GetAttributeValue<DateTime?>("nrq_averagespeakerscore_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Average Speaker Score.</para>
        /// <para>Display Name: Average Speaker Score (State)</para>
        /// </summary>
        [AttributeLogicalName("nrq_averagespeakerscore_state")]
        [DisplayName("Average Speaker Score (State)")]
        [Range(-2147483648, 2147483647)]
        public int? nrq_AverageSpeakerScore_State {
            get {
                return GetAttributeValue<int?>("nrq_averagespeakerscore_state");
            }
        }
        
        /// <summary>
        /// <para>nrq_AverageSpeakerScore (SumAverageDescription)</para>
        /// <para>Display Name: nrq_AverageSpeakerScore (SumAverage)</para>
        /// </summary>
        [AttributeLogicalName("nrq_averagespeakerscore_sum")]
        [DisplayName("nrq_AverageSpeakerScore (SumAverage)")]
        public decimal? nrq_AverageSpeakerScore_Sum {
            get {
                return GetAttributeValue<decimal?>("nrq_averagespeakerscore_sum");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Total Events Attended</para>
        /// </summary>
        [AttributeLogicalName("nrq_totaleventsattended")]
        [DisplayName("Total Events Attended")]
        [Range(0, 2147483647)]
        public int? nrq_TotalEventsAttended {
            get {
                return GetAttributeValue<int?>("nrq_totaleventsattended");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Total Events Attended.</para>
        /// <para>Display Name: Total Events Attended (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("nrq_totaleventsattended_date")]
        [DisplayName("Total Events Attended (Last Updated On)")]
        public DateTime? nrq_TotalEventsAttended_Date {
            get {
                return GetAttributeValue<DateTime?>("nrq_totaleventsattended_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Total Events Attended.</para>
        /// <para>Display Name: Total Events Attended (State)</para>
        /// </summary>
        [AttributeLogicalName("nrq_totaleventsattended_state")]
        [DisplayName("Total Events Attended (State)")]
        [Range(-2147483648, 2147483647)]
        public int? nrq_TotalEventsAttended_State {
            get {
                return GetAttributeValue<int?>("nrq_totaleventsattended_state");
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referenceduser_parent_user {
            get {
                return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentsystemuserid")]
        [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
        public SystemUser Referencinguser_parent_user {
            get {
                return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_event_createdby")]
        public IEnumerable<nrq_Event> lk_nrq_event_createdby {
            get {
                return GetRelatedEntities<nrq_Event>("lk_nrq_event_createdby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_event_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_event_createdonbehalfby")]
        public IEnumerable<nrq_Event> lk_nrq_event_createdonbehalfby {
            get {
                return GetRelatedEntities<nrq_Event>("lk_nrq_event_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_event_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_event_modifiedby")]
        public IEnumerable<nrq_Event> lk_nrq_event_modifiedby {
            get {
                return GetRelatedEntities<nrq_Event>("lk_nrq_event_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_event_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_event_modifiedonbehalfby")]
        public IEnumerable<nrq_Event> lk_nrq_event_modifiedonbehalfby {
            get {
                return GetRelatedEntities<nrq_Event>("lk_nrq_event_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_event_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_eventtype_createdby")]
        public IEnumerable<nrq_EventType> lk_nrq_eventtype_createdby {
            get {
                return GetRelatedEntities<nrq_EventType>("lk_nrq_eventtype_createdby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_eventtype_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_eventtype_createdonbehalfby")]
        public IEnumerable<nrq_EventType> lk_nrq_eventtype_createdonbehalfby {
            get {
                return GetRelatedEntities<nrq_EventType>("lk_nrq_eventtype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_eventtype_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_eventtype_modifiedby")]
        public IEnumerable<nrq_EventType> lk_nrq_eventtype_modifiedby {
            get {
                return GetRelatedEntities<nrq_EventType>("lk_nrq_eventtype_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_eventtype_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_eventtype_modifiedonbehalfby")]
        public IEnumerable<nrq_EventType> lk_nrq_eventtype_modifiedonbehalfby {
            get {
                return GetRelatedEntities<nrq_EventType>("lk_nrq_eventtype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_eventtype_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_registration_createdby")]
        public IEnumerable<nrq_Registration> lk_nrq_registration_createdby {
            get {
                return GetRelatedEntities<nrq_Registration>("lk_nrq_registration_createdby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_registration_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_registration_createdonbehalfby")]
        public IEnumerable<nrq_Registration> lk_nrq_registration_createdonbehalfby {
            get {
                return GetRelatedEntities<nrq_Registration>("lk_nrq_registration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_registration_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_registration_modifiedby")]
        public IEnumerable<nrq_Registration> lk_nrq_registration_modifiedby {
            get {
                return GetRelatedEntities<nrq_Registration>("lk_nrq_registration_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_registration_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_registration_modifiedonbehalfby")]
        public IEnumerable<nrq_Registration> lk_nrq_registration_modifiedonbehalfby {
            get {
                return GetRelatedEntities<nrq_Registration>("lk_nrq_registration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_registration_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_session_createdby")]
        public IEnumerable<nrq_Session> lk_nrq_session_createdby {
            get {
                return GetRelatedEntities<nrq_Session>("lk_nrq_session_createdby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_session_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_session_createdonbehalfby")]
        public IEnumerable<nrq_Session> lk_nrq_session_createdonbehalfby {
            get {
                return GetRelatedEntities<nrq_Session>("lk_nrq_session_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_session_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_session_modifiedby")]
        public IEnumerable<nrq_Session> lk_nrq_session_modifiedby {
            get {
                return GetRelatedEntities<nrq_Session>("lk_nrq_session_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_session_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_session_modifiedonbehalfby")]
        public IEnumerable<nrq_Session> lk_nrq_session_modifiedonbehalfby {
            get {
                return GetRelatedEntities<nrq_Session>("lk_nrq_session_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_session_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_sessionfeedback_createdby")]
        public IEnumerable<nrq_SessionFeedback> lk_nrq_sessionfeedback_createdby {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("lk_nrq_sessionfeedback_createdby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_sessionfeedback_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_sessionfeedback_createdonbehalfby")]
        public IEnumerable<nrq_SessionFeedback> lk_nrq_sessionfeedback_createdonbehalfby {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("lk_nrq_sessionfeedback_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_sessionfeedback_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_sessionfeedback_modifiedby")]
        public IEnumerable<nrq_SessionFeedback> lk_nrq_sessionfeedback_modifiedby {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("lk_nrq_sessionfeedback_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_sessionfeedback_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_nrq_sessionfeedback_modifiedonbehalfby")]
        public IEnumerable<nrq_SessionFeedback> lk_nrq_sessionfeedback_modifiedonbehalfby {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("lk_nrq_sessionfeedback_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_nrq_sessionfeedback_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_event_organizer_systemuser")]
        public IEnumerable<nrq_Event> nrq_nrq_event_organizer_systemuser {
            get {
                return GetRelatedEntities<nrq_Event>("nrq_nrq_event_organizer_systemuser", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_event_organizer_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_registration_userid_systemuser")]
        public IEnumerable<nrq_Registration> nrq_nrq_registration_userid_systemuser {
            get {
                return GetRelatedEntities<nrq_Registration>("nrq_nrq_registration_userid_systemuser", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_registration_userid_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_session_speaker_systemuser")]
        public IEnumerable<nrq_Session> nrq_nrq_session_speaker_systemuser {
            get {
                return GetRelatedEntities<nrq_Session>("nrq_nrq_session_speaker_systemuser", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_session_speaker_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_sessionfeedback_SpeakerId_systemuser")]
        public IEnumerable<nrq_SessionFeedback> nrq_nrq_sessionfeedback_SpeakerId_systemuser {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("nrq_nrq_sessionfeedback_SpeakerId_systemuser", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_sessionfeedback_SpeakerId_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_sessionfeedback_userId_systemuser")]
        public IEnumerable<nrq_SessionFeedback> nrq_nrq_sessionfeedback_userId_systemuser {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("nrq_nrq_sessionfeedback_userId_systemuser", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_sessionfeedback_userId_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("user_nrq_event")]
        public IEnumerable<nrq_Event> user_nrq_event {
            get {
                return GetRelatedEntities<nrq_Event>("user_nrq_event", null);
            }
            set {
                SetRelatedEntities("user_nrq_event", null, value);
            }
        }
        
        [RelationshipSchemaName("user_nrq_eventtype")]
        public IEnumerable<nrq_EventType> user_nrq_eventtype {
            get {
                return GetRelatedEntities<nrq_EventType>("user_nrq_eventtype", null);
            }
            set {
                SetRelatedEntities("user_nrq_eventtype", null, value);
            }
        }
        
        [RelationshipSchemaName("user_nrq_registration")]
        public IEnumerable<nrq_Registration> user_nrq_registration {
            get {
                return GetRelatedEntities<nrq_Registration>("user_nrq_registration", null);
            }
            set {
                SetRelatedEntities("user_nrq_registration", null, value);
            }
        }
        
        [RelationshipSchemaName("user_nrq_session")]
        public IEnumerable<nrq_Session> user_nrq_session {
            get {
                return GetRelatedEntities<nrq_Session>("user_nrq_session", null);
            }
            set {
                SetRelatedEntities("user_nrq_session", null, value);
            }
        }
        
        [RelationshipSchemaName("user_nrq_sessionfeedback")]
        public IEnumerable<nrq_SessionFeedback> user_nrq_sessionfeedback {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("user_nrq_sessionfeedback", null);
            }
            set {
                SetRelatedEntities("user_nrq_sessionfeedback", null, value);
            }
        }
        
        public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public static SystemUser Retrieve_aadobjectid(IOrganizationService service, Guid AzureActiveDirectoryObjectId, params Expression<Func<SystemUser,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public void AltKey_aadobjectid(Guid AzureActiveDirectoryObjectId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Event</para>
    /// </summary>
    [EntityLogicalName("nrq_event")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class nrq_Event : ExtendedEntity<nrq_EventState, nrq_Event_statuscode> {
        
        public const string EntityLogicalName = "nrq_event";
        
        public const int EntityTypeCode = 10177;
        
        public nrq_Event() : 
                base(EntityLogicalName) {
        }
        
        public nrq_Event(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("nrq_event");
            }
        }
        
        [AttributeLogicalName("nrq_eventid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("nrq_eventid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("nrq_eventid")]
        [DisplayName("Event")]
        public Guid? nrq_EventId {
            get {
                return GetAttributeValue<Guid?>("nrq_eventid");
            }
            set {
                SetId("nrq_eventid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("nrq_event")]
        [DisplayName("Event")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("nrq_event");
            }
            set {
                SetAttributeValue("nrq_event", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the entity.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Date</para>
        /// </summary>
        [AttributeLogicalName("nrq_date")]
        [DisplayName("Date")]
        public DateTime? nrq_Date {
            get {
                return GetAttributeValue<DateTime?>("nrq_date");
            }
            set {
                SetAttributeValue("nrq_date", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End Time</para>
        /// </summary>
        [AttributeLogicalName("nrq_endtime")]
        [DisplayName("End Time")]
        [MaxLength(5)]
        public string nrq_EndTime {
            get {
                return GetAttributeValue<string>("nrq_endtime");
            }
            set {
                SetAttributeValue("nrq_endtime", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End Time (Hour)</para>
        /// </summary>
        [AttributeLogicalName("nrq_endtimehour")]
        [DisplayName("End Time (Hour)")]
        public nrq_timehour? nrq_EndTimeHour {
            get {
                return GetOptionSetValue<nrq_timehour>("nrq_endtimehour");
            }
            set {
                SetOptionSetValue("nrq_endtimehour", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("nrq_endtimeminutes")]
        [DisplayName("End Time (Minutes)")]
        public nrq_timeminutes? nrq_EndTimeMinutes {
            get {
                return GetOptionSetValue<nrq_timeminutes>("nrq_endtimeminutes");
            }
            set {
                SetOptionSetValue("nrq_endtimeminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event Type</para>
        /// </summary>
        [AttributeLogicalName("nrq_eventtypeid")]
        [DisplayName("Event Type")]
        public EntityReference nrq_EventTypeId {
            get {
                return GetAttributeValue<EntityReference>("nrq_eventtypeid");
            }
            set {
                SetAttributeValue("nrq_eventtypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("nrq_event")]
        [DisplayName("Event")]
        [MaxLength(100)]
        public string nrq_Event_1 {
            get {
                return GetAttributeValue<string>("nrq_event");
            }
            set {
                SetAttributeValue("nrq_event", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Location</para>
        /// </summary>
        [AttributeLogicalName("nrq_location")]
        [DisplayName("Location")]
        [MaxLength(100)]
        public string nrq_Location {
            get {
                return GetAttributeValue<string>("nrq_location");
            }
            set {
                SetAttributeValue("nrq_location", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("nrq_organizer")]
        [DisplayName("Organizer")]
        public EntityReference nrq_Organizer {
            get {
                return GetAttributeValue<EntityReference>("nrq_organizer");
            }
            set {
                SetAttributeValue("nrq_organizer", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Price</para>
        /// </summary>
        [AttributeLogicalName("nrq_price")]
        [DisplayName("Price")]
        public decimal? nrq_Price {
            get {
                return GetMoneyValue("nrq_price");
            }
            set {
                SetMoneyValue("nrq_price", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start Time</para>
        /// </summary>
        [AttributeLogicalName("nrq_starttime")]
        [DisplayName("Start Time")]
        [MaxLength(5)]
        public string nrq_StartTime {
            get {
                return GetAttributeValue<string>("nrq_starttime");
            }
            set {
                SetAttributeValue("nrq_starttime", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start Time (Hour)</para>
        /// </summary>
        [AttributeLogicalName("nrq_starttimehour")]
        [DisplayName("Start Time (Hour)")]
        public nrq_timehour? nrq_StartTimeHour {
            get {
                return GetOptionSetValue<nrq_timehour>("nrq_starttimehour");
            }
            set {
                SetOptionSetValue("nrq_starttimehour", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("nrq_starttimeminutes")]
        [DisplayName("Start Time (Minutes)")]
        public nrq_timeminutes? nrq_StartTimeMinutes {
            get {
                return GetOptionSetValue<nrq_timeminutes>("nrq_starttimeminutes");
            }
            set {
                SetOptionSetValue("nrq_starttimeminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Total Cost</para>
        /// </summary>
        [AttributeLogicalName("nrq_totalcost")]
        [DisplayName("Total Cost")]
        public decimal? nrq_TotalCost {
            get {
                return GetMoneyValue("nrq_totalcost");
            }
            set {
                SetMoneyValue("nrq_totalcost", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Price in base currency.</para>
        /// <para>Display Name: Price (Base)</para>
        /// </summary>
        [AttributeLogicalName("nrq_price_base")]
        [DisplayName("Price (Base)")]
        public decimal? nrq_price_Base {
            get {
                return GetMoneyValue("nrq_price_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Cost in base currency.</para>
        /// <para>Display Name: Total Cost (Base)</para>
        /// </summary>
        [AttributeLogicalName("nrq_totalcost_base")]
        [DisplayName("Total Cost (Base)")]
        public decimal? nrq_totalcost_Base {
            get {
                return GetMoneyValue("nrq_totalcost_base");
            }
        }
        
        /// <summary>
        /// <para>Status of the Event</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public nrq_EventState? statecode {
            get {
                return GetOptionSetValue<nrq_EventState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Event</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public nrq_Event_statuscode? statuscode {
            get {
                return GetOptionSetValue<nrq_Event_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_nrq_event_createdby")]
        public SystemUser lk_nrq_event_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_event_createdby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_event_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_nrq_event_createdonbehalfby")]
        public SystemUser lk_nrq_event_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_event_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_event_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_nrq_event_modifiedby")]
        public SystemUser lk_nrq_event_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_event_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_event_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_nrq_event_modifiedonbehalfby")]
        public SystemUser lk_nrq_event_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_event_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_event_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_eventtypeid")]
        [RelationshipSchemaName("nrq_nrq_event_eventtypeid_nrq_eventtype")]
        public nrq_EventType nrq_nrq_event_eventtypeid_nrq_eventtype {
            get {
                return GetRelatedEntity<nrq_EventType>("nrq_nrq_event_eventtypeid_nrq_eventtype", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_event_eventtypeid_nrq_eventtype", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_organizer")]
        [RelationshipSchemaName("nrq_nrq_event_organizer_systemuser")]
        public SystemUser nrq_nrq_event_organizer_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("nrq_nrq_event_organizer_systemuser", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_event_organizer_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_registration_eventid_nrq_event")]
        public IEnumerable<nrq_Registration> nrq_nrq_registration_eventid_nrq_event {
            get {
                return GetRelatedEntities<nrq_Registration>("nrq_nrq_registration_eventid_nrq_event", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_registration_eventid_nrq_event", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_session_event_nrq_event")]
        public IEnumerable<nrq_Session> nrq_nrq_session_event_nrq_event {
            get {
                return GetRelatedEntities<nrq_Session>("nrq_nrq_session_event_nrq_event", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_session_event_nrq_event", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_nrq_event")]
        public SystemUser user_nrq_event {
            get {
                return GetRelatedEntity<SystemUser>("user_nrq_event", null);
            }
            set {
                SetRelatedEntity("user_nrq_event", null, value);
            }
        }
        
        public static nrq_Event Retrieve(IOrganizationService service, Guid id, params Expression<Func<nrq_Event,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Event Type</para>
    /// </summary>
    [EntityLogicalName("nrq_eventtype")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class nrq_EventType : ExtendedEntity<nrq_EventTypeState, nrq_EventType_statuscode> {
        
        public const string EntityLogicalName = "nrq_eventtype";
        
        public const int EntityTypeCode = 10287;
        
        public nrq_EventType() : 
                base(EntityLogicalName) {
        }
        
        public nrq_EventType(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("nrq_eventtype");
            }
        }
        
        [AttributeLogicalName("nrq_eventtypeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("nrq_eventtypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Event Type</para>
        /// </summary>
        [AttributeLogicalName("nrq_eventtypeid")]
        [DisplayName("Event Type")]
        public Guid? nrq_EventTypeId {
            get {
                return GetAttributeValue<Guid?>("nrq_eventtypeid");
            }
            set {
                SetId("nrq_eventtypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event Type</para>
        /// </summary>
        [AttributeLogicalName("nrq_eventtype")]
        [DisplayName("Event Type")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("nrq_eventtype");
            }
            set {
                SetAttributeValue("nrq_eventtype", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event Type</para>
        /// </summary>
        [AttributeLogicalName("nrq_eventtype")]
        [DisplayName("Event Type")]
        [MaxLength(100)]
        public string nrq_EventType_1 {
            get {
                return GetAttributeValue<string>("nrq_eventtype");
            }
            set {
                SetAttributeValue("nrq_eventtype", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Event Type</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public nrq_EventTypeState? statecode {
            get {
                return GetOptionSetValue<nrq_EventTypeState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Event Type</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public nrq_EventType_statuscode? statuscode {
            get {
                return GetOptionSetValue<nrq_EventType_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_nrq_eventtype_createdby")]
        public SystemUser lk_nrq_eventtype_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_eventtype_createdby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_eventtype_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_nrq_eventtype_createdonbehalfby")]
        public SystemUser lk_nrq_eventtype_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_eventtype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_eventtype_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_nrq_eventtype_modifiedby")]
        public SystemUser lk_nrq_eventtype_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_eventtype_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_eventtype_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_nrq_eventtype_modifiedonbehalfby")]
        public SystemUser lk_nrq_eventtype_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_eventtype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_eventtype_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_event_eventtypeid_nrq_eventtype")]
        public IEnumerable<nrq_Event> nrq_nrq_event_eventtypeid_nrq_eventtype {
            get {
                return GetRelatedEntities<nrq_Event>("nrq_nrq_event_eventtypeid_nrq_eventtype", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_event_eventtypeid_nrq_eventtype", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_nrq_eventtype")]
        public SystemUser user_nrq_eventtype {
            get {
                return GetRelatedEntity<SystemUser>("user_nrq_eventtype", null);
            }
            set {
                SetRelatedEntity("user_nrq_eventtype", null, value);
            }
        }
        
        public static nrq_EventType Retrieve(IOrganizationService service, Guid id, params Expression<Func<nrq_EventType,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'Event Type '</para>
        /// </summary>
        public static nrq_EventType Retrieve_nrq_EventType(IOrganizationService service, string nrq_EventType, params Expression<Func<nrq_EventType,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("nrq_eventtype", nrq_EventType);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'Event Type '</para>
        /// </summary>
        public void AltKey_nrq_EventType(string nrq_EventType) {
            KeyAttributes.Clear();
            KeyAttributes.Add("nrq_eventtype", nrq_EventType);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Registration</para>
    /// </summary>
    [EntityLogicalName("nrq_registration")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class nrq_Registration : ExtendedEntity<nrq_RegistrationState, nrq_Registration_statuscode> {
        
        public const string EntityLogicalName = "nrq_registration";
        
        public const int EntityTypeCode = 10155;
        
        public nrq_Registration() : 
                base(EntityLogicalName) {
        }
        
        public nrq_Registration(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("nrq_registration");
            }
        }
        
        [AttributeLogicalName("nrq_registrationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("nrq_registrationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Registration</para>
        /// </summary>
        [AttributeLogicalName("nrq_registrationid")]
        [DisplayName("Registration")]
        public Guid? nrq_RegistrationId {
            get {
                return GetAttributeValue<Guid?>("nrq_registrationid");
            }
            set {
                SetId("nrq_registrationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Registration</para>
        /// </summary>
        [AttributeLogicalName("nrq_registration")]
        [DisplayName("Registration")]
        [MaxLength(50)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("nrq_registration");
            }
            set {
                SetAttributeValue("nrq_registration", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the entity.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("nrq_eventid")]
        [DisplayName("Event")]
        public EntityReference nrq_EventId {
            get {
                return GetAttributeValue<EntityReference>("nrq_eventid");
            }
            set {
                SetAttributeValue("nrq_eventid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Payment Date</para>
        /// </summary>
        [AttributeLogicalName("nrq_paymentdate")]
        [DisplayName("Payment Date")]
        public DateTime? nrq_PaymentDate {
            get {
                return GetAttributeValue<DateTime?>("nrq_paymentdate");
            }
            set {
                SetAttributeValue("nrq_paymentdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Price</para>
        /// </summary>
        [AttributeLogicalName("nrq_price")]
        [DisplayName("Price")]
        public decimal? nrq_Price {
            get {
                return GetMoneyValue("nrq_price");
            }
            set {
                SetMoneyValue("nrq_price", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Registration</para>
        /// </summary>
        [AttributeLogicalName("nrq_registration")]
        [DisplayName("Registration")]
        [MaxLength(50)]
        public string nrq_Registration_1 {
            get {
                return GetAttributeValue<string>("nrq_registration");
            }
            set {
                SetAttributeValue("nrq_registration", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("nrq_userid")]
        [DisplayName("User")]
        public EntityReference nrq_UserId {
            get {
                return GetAttributeValue<EntityReference>("nrq_userid");
            }
            set {
                SetAttributeValue("nrq_userid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Was Present</para>
        /// </summary>
        [AttributeLogicalName("nrq_waspresent")]
        [DisplayName("Was Present")]
        public bool? nrq_WasPresent {
            get {
                return GetAttributeValue<bool?>("nrq_waspresent");
            }
            set {
                SetAttributeValue("nrq_waspresent", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Price in base currency.</para>
        /// <para>Display Name: Price (Base)</para>
        /// </summary>
        [AttributeLogicalName("nrq_price_base")]
        [DisplayName("Price (Base)")]
        public decimal? nrq_price_Base {
            get {
                return GetMoneyValue("nrq_price_base");
            }
        }
        
        /// <summary>
        /// <para>Status of the Registration</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public nrq_RegistrationState? statecode {
            get {
                return GetOptionSetValue<nrq_RegistrationState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Registration</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public nrq_Registration_statuscode? statuscode {
            get {
                return GetOptionSetValue<nrq_Registration_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_nrq_registration_createdby")]
        public SystemUser lk_nrq_registration_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_registration_createdby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_registration_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_nrq_registration_createdonbehalfby")]
        public SystemUser lk_nrq_registration_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_registration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_registration_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_nrq_registration_modifiedby")]
        public SystemUser lk_nrq_registration_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_registration_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_registration_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_nrq_registration_modifiedonbehalfby")]
        public SystemUser lk_nrq_registration_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_registration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_registration_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_eventid")]
        [RelationshipSchemaName("nrq_nrq_registration_eventid_nrq_event")]
        public nrq_Event nrq_nrq_registration_eventid_nrq_event {
            get {
                return GetRelatedEntity<nrq_Event>("nrq_nrq_registration_eventid_nrq_event", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_registration_eventid_nrq_event", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_userid")]
        [RelationshipSchemaName("nrq_nrq_registration_userid_systemuser")]
        public SystemUser nrq_nrq_registration_userid_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("nrq_nrq_registration_userid_systemuser", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_registration_userid_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_nrq_registration")]
        public SystemUser user_nrq_registration {
            get {
                return GetRelatedEntity<SystemUser>("user_nrq_registration", null);
            }
            set {
                SetRelatedEntity("user_nrq_registration", null, value);
            }
        }
        
        public static nrq_Registration Retrieve(IOrganizationService service, Guid id, params Expression<Func<nrq_Registration,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Session</para>
    /// </summary>
    [EntityLogicalName("nrq_session")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class nrq_Session : ExtendedEntity<nrq_SessionState, nrq_Session_statuscode> {
        
        public const string EntityLogicalName = "nrq_session";
        
        public const int EntityTypeCode = 10221;
        
        public nrq_Session() : 
                base(EntityLogicalName) {
        }
        
        public nrq_Session(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("nrq_session");
            }
        }
        
        [AttributeLogicalName("nrq_sessionid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("nrq_sessionid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Session</para>
        /// </summary>
        [AttributeLogicalName("nrq_sessionid")]
        [DisplayName("Session")]
        public Guid? nrq_SessionId {
            get {
                return GetAttributeValue<Guid?>("nrq_sessionid");
            }
            set {
                SetId("nrq_sessionid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Session</para>
        /// </summary>
        [AttributeLogicalName("nrq_session")]
        [DisplayName("Session")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("nrq_session");
            }
            set {
                SetAttributeValue("nrq_session", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("nrq_description")]
        [DisplayName("Description")]
        [MaxLength(1000)]
        public string nrq_Description {
            get {
                return GetAttributeValue<string>("nrq_description");
            }
            set {
                SetAttributeValue("nrq_description", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Enabled For Feedback</para>
        /// </summary>
        [AttributeLogicalName("nrq_enabledforfeedback")]
        [DisplayName("Enabled For Feedback")]
        public bool? nrq_EnabledForFeedback {
            get {
                return GetAttributeValue<bool?>("nrq_enabledforfeedback");
            }
            set {
                SetAttributeValue("nrq_enabledforfeedback", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: EndTime</para>
        /// </summary>
        [AttributeLogicalName("nrq_endtime")]
        [DisplayName("EndTime")]
        [MaxLength(5)]
        public string nrq_EndTime {
            get {
                return GetAttributeValue<string>("nrq_endtime");
            }
            set {
                SetAttributeValue("nrq_endtime", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End Time (Hour)</para>
        /// </summary>
        [AttributeLogicalName("nrq_endtimehour")]
        [DisplayName("End Time (Hour)")]
        public nrq_timehour? nrq_EndTimeHour {
            get {
                return GetOptionSetValue<nrq_timehour>("nrq_endtimehour");
            }
            set {
                SetOptionSetValue("nrq_endtimehour", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("nrq_endtimeminutes")]
        [DisplayName("End Time (Minutes)")]
        public nrq_timeminutes? nrq_EndTimeMinutes {
            get {
                return GetOptionSetValue<nrq_timeminutes>("nrq_endtimeminutes");
            }
            set {
                SetOptionSetValue("nrq_endtimeminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Event</para>
        /// </summary>
        [AttributeLogicalName("nrq_eventid")]
        [DisplayName("Event")]
        public EntityReference nrq_EventId {
            get {
                return GetAttributeValue<EntityReference>("nrq_eventid");
            }
            set {
                SetAttributeValue("nrq_eventid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Location</para>
        /// </summary>
        [AttributeLogicalName("nrq_location")]
        [DisplayName("Location")]
        [MaxLength(100)]
        public string nrq_Location {
            get {
                return GetAttributeValue<string>("nrq_location");
            }
            set {
                SetAttributeValue("nrq_location", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Room</para>
        /// </summary>
        [AttributeLogicalName("nrq_room")]
        [DisplayName("Room")]
        [MaxLength(20)]
        public string nrq_Room {
            get {
                return GetAttributeValue<string>("nrq_room");
            }
            set {
                SetAttributeValue("nrq_room", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Session</para>
        /// </summary>
        [AttributeLogicalName("nrq_session")]
        [DisplayName("Session")]
        [MaxLength(100)]
        public string nrq_Session_1 {
            get {
                return GetAttributeValue<string>("nrq_session");
            }
            set {
                SetAttributeValue("nrq_session", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Speaker</para>
        /// </summary>
        [AttributeLogicalName("nrq_speakerid")]
        [DisplayName("Speaker")]
        public EntityReference nrq_SpeakerId {
            get {
                return GetAttributeValue<EntityReference>("nrq_speakerid");
            }
            set {
                SetAttributeValue("nrq_speakerid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: StartTime</para>
        /// </summary>
        [AttributeLogicalName("nrq_starttime")]
        [DisplayName("StartTime")]
        [MaxLength(5)]
        public string nrq_StartTime {
            get {
                return GetAttributeValue<string>("nrq_starttime");
            }
            set {
                SetAttributeValue("nrq_starttime", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start Time (Hour)</para>
        /// </summary>
        [AttributeLogicalName("nrq_starttimehour")]
        [DisplayName("Start Time (Hour)")]
        public nrq_timehour? nrq_StartTimeHour {
            get {
                return GetOptionSetValue<nrq_timehour>("nrq_starttimehour");
            }
            set {
                SetOptionSetValue("nrq_starttimehour", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("nrq_starttimeminutes")]
        [DisplayName("Start Time (Minutes)")]
        public nrq_timeminutes? nrq_StartTimeMinutes {
            get {
                return GetOptionSetValue<nrq_timeminutes>("nrq_starttimeminutes");
            }
            set {
                SetOptionSetValue("nrq_starttimeminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Session</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public nrq_SessionState? statecode {
            get {
                return GetOptionSetValue<nrq_SessionState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Session</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public nrq_Session_statuscode? statuscode {
            get {
                return GetOptionSetValue<nrq_Session_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_nrq_session_createdby")]
        public SystemUser lk_nrq_session_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_session_createdby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_session_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_nrq_session_createdonbehalfby")]
        public SystemUser lk_nrq_session_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_session_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_session_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_nrq_session_modifiedby")]
        public SystemUser lk_nrq_session_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_session_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_session_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_nrq_session_modifiedonbehalfby")]
        public SystemUser lk_nrq_session_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_session_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_session_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_eventid")]
        [RelationshipSchemaName("nrq_nrq_session_event_nrq_event")]
        public nrq_Event nrq_nrq_session_event_nrq_event {
            get {
                return GetRelatedEntity<nrq_Event>("nrq_nrq_session_event_nrq_event", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_session_event_nrq_event", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_speakerid")]
        [RelationshipSchemaName("nrq_nrq_session_speaker_systemuser")]
        public SystemUser nrq_nrq_session_speaker_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("nrq_nrq_session_speaker_systemuser", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_session_speaker_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("nrq_nrq_sessionfeedback_session_nrq_session")]
        public IEnumerable<nrq_SessionFeedback> nrq_nrq_sessionfeedback_session_nrq_session {
            get {
                return GetRelatedEntities<nrq_SessionFeedback>("nrq_nrq_sessionfeedback_session_nrq_session", null);
            }
            set {
                SetRelatedEntities("nrq_nrq_sessionfeedback_session_nrq_session", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_nrq_session")]
        public SystemUser user_nrq_session {
            get {
                return GetRelatedEntity<SystemUser>("user_nrq_session", null);
            }
            set {
                SetRelatedEntity("user_nrq_session", null, value);
            }
        }
        
        public static nrq_Session Retrieve(IOrganizationService service, Guid id, params Expression<Func<nrq_Session,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Session Feedback</para>
    /// </summary>
    [EntityLogicalName("nrq_sessionfeedback")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class nrq_SessionFeedback : ExtendedEntity<nrq_SessionFeedbackState, nrq_SessionFeedback_statuscode> {
        
        public const string EntityLogicalName = "nrq_sessionfeedback";
        
        public const int EntityTypeCode = 10250;
        
        public nrq_SessionFeedback() : 
                base(EntityLogicalName) {
        }
        
        public nrq_SessionFeedback(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("nrq_sessionfeedback");
            }
        }
        
        [AttributeLogicalName("nrq_sessionfeedbackid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("nrq_sessionfeedbackid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Session Feedback</para>
        /// </summary>
        [AttributeLogicalName("nrq_sessionfeedbackid")]
        [DisplayName("Session Feedback")]
        public Guid? nrq_SessionFeedbackId {
            get {
                return GetAttributeValue<Guid?>("nrq_sessionfeedbackid");
            }
            set {
                SetId("nrq_sessionfeedbackid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Session Feedback</para>
        /// </summary>
        [AttributeLogicalName("nrq_sessionfeedback")]
        [DisplayName("Session Feedback")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("nrq_sessionfeedback");
            }
            set {
                SetAttributeValue("nrq_sessionfeedback", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>The score of the session (materials presented)</para>
        /// <para>Display Name: Rating</para>
        /// </summary>
        [AttributeLogicalName("nrq_rating")]
        [DisplayName("Rating")]
        [Range(1, 5)]
        public int? nrq_Rating {
            get {
                return GetAttributeValue<int?>("nrq_rating");
            }
            set {
                SetAttributeValue("nrq_rating", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Session Feedback</para>
        /// </summary>
        [AttributeLogicalName("nrq_sessionfeedback")]
        [DisplayName("Session Feedback")]
        [MaxLength(100)]
        public string nrq_SessionFeedback_1 {
            get {
                return GetAttributeValue<string>("nrq_sessionfeedback");
            }
            set {
                SetAttributeValue("nrq_sessionfeedback", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Session</para>
        /// </summary>
        [AttributeLogicalName("nrq_sessionid")]
        [DisplayName("Session")]
        public EntityReference nrq_SessionId {
            get {
                return GetAttributeValue<EntityReference>("nrq_sessionid");
            }
            set {
                SetAttributeValue("nrq_sessionid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Speaker</para>
        /// </summary>
        [AttributeLogicalName("nrq_speakerid")]
        [DisplayName("Speaker")]
        public EntityReference nrq_SpeakerId {
            get {
                return GetAttributeValue<EntityReference>("nrq_speakerid");
            }
            set {
                SetAttributeValue("nrq_speakerid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Speaker Score</para>
        /// </summary>
        [AttributeLogicalName("nrq_speakerscore")]
        [DisplayName("Speaker Score")]
        [Range(1, 5)]
        public int? nrq_SpeakerScore {
            get {
                return GetAttributeValue<int?>("nrq_speakerscore");
            }
            set {
                SetAttributeValue("nrq_speakerscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("nrq_userid")]
        [DisplayName("User")]
        public EntityReference nrq_UserId {
            get {
                return GetAttributeValue<EntityReference>("nrq_userid");
            }
            set {
                SetAttributeValue("nrq_userid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Session Feedback</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public nrq_SessionFeedbackState? statecode {
            get {
                return GetOptionSetValue<nrq_SessionFeedbackState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Session Feedback</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public nrq_SessionFeedback_statuscode? statuscode {
            get {
                return GetOptionSetValue<nrq_SessionFeedback_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_nrq_sessionfeedback_createdby")]
        public SystemUser lk_nrq_sessionfeedback_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_sessionfeedback_createdby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_sessionfeedback_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_nrq_sessionfeedback_createdonbehalfby")]
        public SystemUser lk_nrq_sessionfeedback_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_sessionfeedback_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_sessionfeedback_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_nrq_sessionfeedback_modifiedby")]
        public SystemUser lk_nrq_sessionfeedback_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_sessionfeedback_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_sessionfeedback_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_nrq_sessionfeedback_modifiedonbehalfby")]
        public SystemUser lk_nrq_sessionfeedback_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_nrq_sessionfeedback_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_nrq_sessionfeedback_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_speakerid")]
        [RelationshipSchemaName("nrq_nrq_sessionfeedback_SpeakerId_systemuser")]
        public SystemUser nrq_nrq_sessionfeedback_SpeakerId_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("nrq_nrq_sessionfeedback_SpeakerId_systemuser", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_sessionfeedback_SpeakerId_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_sessionid")]
        [RelationshipSchemaName("nrq_nrq_sessionfeedback_session_nrq_session")]
        public nrq_Session nrq_nrq_sessionfeedback_session_nrq_session {
            get {
                return GetRelatedEntity<nrq_Session>("nrq_nrq_sessionfeedback_session_nrq_session", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_sessionfeedback_session_nrq_session", null, value);
            }
        }
        
        [AttributeLogicalName("nrq_userid")]
        [RelationshipSchemaName("nrq_nrq_sessionfeedback_userId_systemuser")]
        public SystemUser nrq_nrq_sessionfeedback_userId_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("nrq_nrq_sessionfeedback_userId_systemuser", null);
            }
            set {
                SetRelatedEntity("nrq_nrq_sessionfeedback_userId_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_nrq_sessionfeedback")]
        public SystemUser user_nrq_sessionfeedback {
            get {
                return GetRelatedEntity<SystemUser>("user_nrq_sessionfeedback", null);
            }
            set {
                SetRelatedEntity("user_nrq_sessionfeedback", null, value);
            }
        }
        
        public static nrq_SessionFeedback Retrieve(IOrganizationService service, Guid id, params Expression<Func<nrq_SessionFeedback,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'UserSessionFeedback'</para>
        /// </summary>
        public static nrq_SessionFeedback Retrieve_nrq_UserSessionFeedback(IOrganizationService service, EntityReference nrq_SessionId, EntityReference nrq_UserId, params Expression<Func<nrq_SessionFeedback,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("nrq_sessionid", nrq_SessionId);
            keys.Add("nrq_userid", nrq_UserId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'UserSessionFeedback'</para>
        /// </summary>
        public void AltKey_nrq_UserSessionFeedback(EntityReference nrq_SessionId, EntityReference nrq_UserId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("nrq_sessionid", nrq_SessionId);
            KeyAttributes.Add("nrq_userid", nrq_UserId);
        }
    }
    
    public partial class XrmContext : ExtendedOrganizationServiceContext {
        
        public XrmContext(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<SystemUser> SystemUserSet {
            get {
                return CreateQuery<SystemUser>();
            }
        }
        
        public IQueryable<nrq_Event> nrq_EventSet {
            get {
                return CreateQuery<nrq_Event>();
            }
        }
        
        public IQueryable<nrq_EventType> nrq_EventTypeSet {
            get {
                return CreateQuery<nrq_EventType>();
            }
        }
        
        public IQueryable<nrq_Registration> nrq_RegistrationSet {
            get {
                return CreateQuery<nrq_Registration>();
            }
        }
        
        public IQueryable<nrq_Session> nrq_SessionSet {
            get {
                return CreateQuery<nrq_Session>();
            }
        }
        
        public IQueryable<nrq_SessionFeedback> nrq_SessionFeedbackSet {
            get {
                return CreateQuery<nrq_SessionFeedback>();
            }
        }
    }
    
    [DataContract()]
    public enum SystemUser_AccessMode {
        
        [EnumMember()]
        [OptionSetMetadata("Read-Write", Index=0, Lcid=1033)]
        ReadWrite = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Read", Index=2, Lcid=1033)]
        Read = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Support User", Index=3, Lcid=1033)]
        SupportUser = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Non-interactive", Index=4, Lcid=1033)]
        Noninteractive = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Delegated Admin", Index=5, Lcid=1033)]
        DelegatedAdmin = 5,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_AzureState {
        
        [EnumMember()]
        [OptionSetMetadata("Exists", Index=0, Lcid=1033)]
        Exists = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1, Lcid=1033)]
        Softdeleted = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Not found or hard deleted", Index=2, Lcid=1033)]
        Notfoundorharddeleted = 2,
    }
    
    [DataContract()]
    public enum SystemUser_CALType {
        
        [EnumMember()]
        [OptionSetMetadata("Professional", Index=0, Lcid=1033)]
        Professional = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Basic", Index=2, Lcid=1033)]
        Basic = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Device Professional", Index=3, Lcid=1033)]
        DeviceProfessional = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Device Basic", Index=4, Lcid=1033)]
        DeviceBasic = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Essential", Index=5, Lcid=1033)]
        Essential = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Device Essential", Index=6, Lcid=1033)]
        DeviceEssential = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Enterprise", Index=7, Lcid=1033)]
        Enterprise = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Device Enterprise", Index=8, Lcid=1033)]
        DeviceEnterprise = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Sales", Index=9, Lcid=1033)]
        Sales = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=10, Lcid=1033)]
        Service = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service", Index=11, Lcid=1033)]
        FieldService = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Project Service", Index=12, Lcid=1033)]
        ProjectService = 12,
    }
    
    [DataContract()]
    public enum SystemUser_DeletedState {
        
        [EnumMember()]
        [OptionSetMetadata("Not deleted", Index=0, Lcid=1033)]
        Notdeleted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1, Lcid=1033)]
        Softdeleted = 1,
    }
    
    [DataContract()]
    public enum SystemUser_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0, Lcid=1033)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1, Lcid=1033)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2, Lcid=1033)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3, Lcid=1033)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum SystemUser_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3, Lcid=1033)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum SystemUser_InviteStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Not Sent", Index=0, Lcid=1033)]
        InvitationNotSent = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Invited", Index=1, Lcid=1033)]
        Invited = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Near Expired", Index=2, Lcid=1033)]
        InvitationNearExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Expired", Index=3, Lcid=1033)]
        InvitationExpired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Accepted", Index=4, Lcid=1033)]
        InvitationAccepted = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Rejected", Index=5, Lcid=1033)]
        InvitationRejected = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Revoked", Index=6, Lcid=1033)]
        InvitationRevoked = 6,
    }
    
    [DataContract()]
    public enum SystemUser_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredAddressCode {
        
        [EnumMember()]
        [OptionSetMetadata("Mailing Address", Index=0, Lcid=1033)]
        MailingAddress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Address", Index=1, Lcid=1033)]
        OtherAddress = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredEmailCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredPhoneCode {
        
        [EnumMember()]
        [OptionSetMetadata("Main Phone", Index=0, Lcid=1033)]
        MainPhone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Phone", Index=1, Lcid=1033)]
        OtherPhone = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Home Phone", Index=2, Lcid=1033)]
        HomePhone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Phone", Index=3, Lcid=1033)]
        MobilePhone = 4,
    }
    
    [DataContract()]
    public enum nrq_EventState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum nrq_Event_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum nrq_EventTypeState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum nrq_EventType_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum nrq_RegistrationState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum nrq_Registration_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum nrq_SessionState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum nrq_Session_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum nrq_SessionFeedbackState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum nrq_SessionFeedback_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum nrq_timehour {
        
        [EnumMember()]
        [OptionSetMetadata("00", Index=0, Lcid=1033, Description="")]
        _00 = 875810000,
        
        [EnumMember()]
        [OptionSetMetadata("01", Index=1, Lcid=1033, Description="")]
        _01 = 875810001,
        
        [EnumMember()]
        [OptionSetMetadata("02", Index=2, Lcid=1033, Description="")]
        _02 = 875810002,
        
        [EnumMember()]
        [OptionSetMetadata("03", Index=3, Lcid=1033, Description="")]
        _03 = 875810003,
        
        [EnumMember()]
        [OptionSetMetadata("04", Index=4, Lcid=1033, Description="")]
        _04 = 875810004,
        
        [EnumMember()]
        [OptionSetMetadata("05", Index=5, Lcid=1033, Description="")]
        _05 = 875810005,
        
        [EnumMember()]
        [OptionSetMetadata("06", Index=6, Lcid=1033, Description="")]
        _06 = 875810006,
        
        [EnumMember()]
        [OptionSetMetadata("07", Index=7, Lcid=1033, Description="")]
        _07 = 875810007,
        
        [EnumMember()]
        [OptionSetMetadata("08", Index=8, Lcid=1033, Description="")]
        _08 = 875810008,
        
        [EnumMember()]
        [OptionSetMetadata("09", Index=9, Lcid=1033, Description="")]
        _09 = 875810009,
        
        [EnumMember()]
        [OptionSetMetadata("10", Index=10, Lcid=1033, Description="")]
        _10 = 875810010,
        
        [EnumMember()]
        [OptionSetMetadata("11", Index=11, Lcid=1033, Description="")]
        _11 = 875810011,
        
        [EnumMember()]
        [OptionSetMetadata("12", Index=12, Lcid=1033, Description="")]
        _12 = 875810012,
        
        [EnumMember()]
        [OptionSetMetadata("13", Index=13, Lcid=1033, Description="")]
        _13 = 875810013,
        
        [EnumMember()]
        [OptionSetMetadata("14", Index=14, Lcid=1033, Description="")]
        _14 = 875810014,
        
        [EnumMember()]
        [OptionSetMetadata("15", Index=15, Lcid=1033, Description="")]
        _15 = 875810015,
        
        [EnumMember()]
        [OptionSetMetadata("16", Index=16, Lcid=1033, Description="")]
        _16 = 875810016,
        
        [EnumMember()]
        [OptionSetMetadata("17", Index=17, Lcid=1033, Description="")]
        _17 = 875810017,
        
        [EnumMember()]
        [OptionSetMetadata("18", Index=18, Lcid=1033, Description="")]
        _18 = 875810018,
        
        [EnumMember()]
        [OptionSetMetadata("19", Index=19, Lcid=1033, Description="")]
        _19 = 875810019,
        
        [EnumMember()]
        [OptionSetMetadata("20", Index=20, Lcid=1033, Description="")]
        _20 = 875810020,
        
        [EnumMember()]
        [OptionSetMetadata("21", Index=21, Lcid=1033, Description="")]
        _21 = 875810021,
        
        [EnumMember()]
        [OptionSetMetadata("22", Index=22, Lcid=1033, Description="")]
        _22 = 875810022,
        
        [EnumMember()]
        [OptionSetMetadata("23", Index=23, Lcid=1033, Description="")]
        _23 = 875810023,
    }
    
    [DataContract()]
    public enum nrq_timeminutes {
        
        [EnumMember()]
        [OptionSetMetadata("00", Index=0, Lcid=1033, Description="")]
        _00 = 875810000,
        
        [EnumMember()]
        [OptionSetMetadata("05", Index=1, Lcid=1033, Description="")]
        _05 = 875810005,
        
        [EnumMember()]
        [OptionSetMetadata("10", Index=2, Lcid=1033, Description="")]
        _10 = 875810010,
        
        [EnumMember()]
        [OptionSetMetadata("15", Index=3, Lcid=1033, Description="")]
        _15 = 875810015,
        
        [EnumMember()]
        [OptionSetMetadata("20", Index=4, Lcid=1033, Description="")]
        _20 = 875810020,
        
        [EnumMember()]
        [OptionSetMetadata("25", Index=5, Lcid=1033, Description="")]
        _25 = 875810025,
        
        [EnumMember()]
        [OptionSetMetadata("30", Index=6, Lcid=1033, Description="")]
        _30 = 875810030,
        
        [EnumMember()]
        [OptionSetMetadata("35", Index=7, Lcid=1033, Description="")]
        _35 = 875810035,
        
        [EnumMember()]
        [OptionSetMetadata("40", Index=8, Lcid=1033, Description="")]
        _40 = 875810040,
        
        [EnumMember()]
        [OptionSetMetadata("45", Index=9, Lcid=1033, Description="")]
        _45 = 875810045,
        
        [EnumMember()]
        [OptionSetMetadata("50", Index=10, Lcid=1033, Description="")]
        _50 = 875810050,
        
        [EnumMember()]
        [OptionSetMetadata("55", Index=11, Lcid=1033, Description="")]
        _55 = 875810055,
    }
}
